// <auto-generated />
using System;
using EngagementModule;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EngagementModule.Migrations
{
    [DbContext(typeof(EngagementDbContext))]
    [Migration("20250721101050_UndotestingEf")]
    partial class UndotestingEf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EngagementModule.Comments.CommentEntity", b =>
                {
                    b.Property<string>("CommentId")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ParentCommentId")
                        .HasColumnType("text");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CommentId");

                    b.ToTable("PostComments", (string)null);
                });

            modelBuilder.Entity("EngagementModule.PostCreated.ActivityChain", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ActivityChains", (string)null);
                });

            modelBuilder.Entity("EngagementModule.PostCreated.ChainLink", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("AcitivtyChainId")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastestSyncTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "AcitivtyChainId");

                    b.HasIndex("AcitivtyChainId");

                    b.ToTable("ChainListeners", (string)null);
                });

            modelBuilder.Entity("EngagementModule.PostLikeEntity", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("PostId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "PostId");

                    b.ToTable("PostLikes", (string)null);
                });

            modelBuilder.Entity("EngagementModule.PostCreated.ChainLink", b =>
                {
                    b.HasOne("EngagementModule.PostCreated.ActivityChain", "Chain")
                        .WithMany("Chains")
                        .HasForeignKey("AcitivtyChainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chain");
                });

            modelBuilder.Entity("EngagementModule.PostCreated.ActivityChain", b =>
                {
                    b.Navigation("Chains");
                });
#pragma warning restore 612, 618
        }
    }
}
